import requests

# Переменные query и genre - это параметры для POST-запроса.
# Поэкспериментируйте, изменяя текст запроса и id жанра.
# Придумайте ключевую фразу для запроса к Балабобе
# и передайте ее в переменную query
query = "Овен"
# Присвойте числовое значение (id жанра) переменной genre
genre = 10


def get_genres():
    """
    Функция отправляет запрос к Балабобе,
    и получает в ответ список жанров.
    """
    genres_url = 'https://zeapi.yandex.net/lab/api/yalm/intros'
    # Обернём выполнение и обработку запроса в блок try/except,
    # чтобы в случае ошибки выполнение программы не прервалось
    # и вернулся пустой список genres_list
    try:
        response = requests.get(genres_url)
        # Чтобы обработать в коде ответ Балабобы,
        # мы преобразуем его в Python-словарь,
        # используя встроенный метод .json()
        response = response.json()
        # Чтобы получить из полученного словаря список жанров -
        # нужно обратиться к словарю по нужному ключу.
        # Раскомментируйте следующую строку, чтобы исследовать ответ Балабобы:
       

        # Найдите в этом ответе нужный ключ и вставьте его вместо многоточия:
        # в переменной genres_list надо сохранить список жанров
        genres_list = response["intros"]
    except:
        # В случае ошибки сработает этот код
        print('Во время выполнения функции get_genres() возникла ошибка!')
        genres_list = []
    return genres_list


def print_genres(genres_list):
    """
    Печатает в форматированном виде список доступных жанров,
    полученный из функции get_genres()
    genres: ответ от функции get_genres(), который нужно распечатать
    """
    print("Список жанров, в которых можно продолжить фразу:")
    # Каждый элемент списка genres_list содержит вложенный список.
    # Переберите список genres_list в цикле и из кадого элемента этого списка
    # напечатайте все элементы вложенного списка, разделяя их символом '-'
    # Пример вывода:
    # "0 - Без стиля - Напишите что-нибудь и получите продолжение от Балабобы"
    
    
    for genre_info in genres_list:
        genre_out = ""
        for genre_element in genre_info:
        	genre_out = f'{genre_out} {genre_element} -'
        l = len(genre_out)
        Remove_last = genre_out[:-1]
        print (Remove_last)
def generate_text(query, genre):
    """
    Функция отправляет POST-запрос к Балабобе,
    и получает ответ в виде словаря.
    Параметры POST-запроса:
    query: ключевая фраза
    genre: id жанра, в котором Балабоба должен сгенерировать текст
    """
    text_url = 'https://zeapi.yandex.net/lab/api/yalm/text3'
    # Параметры запроса для Балабобы храним в словаре data.
    # Передайте в элемент с ключом query значение переменной, содержащей ключевую фразу,
    # а в элемент с ключом intro - переменную, хранящую id жанра
    data = {
        "query": query,
        "intro": genre
    }
    # Запрос к Балабобе оберните в конструкцию try/except,
    # чтобы отлавливать возможные ошибки при запросе.
    try:
    # Сделайте POST-запрос к Балабобе:
    # в параметр url передайте URL, на который должен отправиться запрос,
    # а в параметр json передайте Python-словарь с параметрами запроса.
    	response = requests.post(url=text_url, json=data)

    # Обработайте ответ Балабобы:
    # посредством метода .json() преобразуйте 
    # значение переменной response в Python-словарь
    # и сохраните этот словарь в переменную dict_response
    	dict_response = response.json()
    # Чтобы увидеть ответ Балабобы в виде словаря,
    # раскомментируйте строку ниже. Это поможет вам при отладке кода
    # В случае ошибки напечатайте сообщение
    # 'Во время выполнения функции generate_text() возникла ошибка!'
    # и создайте пустой словарь dict_response
    except:
    # В случае ошибки сработает этот код
    	print('Во время выполнения функции get_genres() возникла ошибка!')
    	dict_response = {}
    # Верните Python-словарь, содержащий ответ Балабобы
    return dict_response


def print_text(text_dict):
    """
    Печатает текст ответа в форматированном виде.
    dict_response: ответ на запрос в виде словаря
    """
    # Отделяем ответ символом переноса строки '\n'
    # и добавляем текст, предшествующий ответу
    print('\n' + 'Ответ на ваш запрос:' + '\n')
    # В словаре text_dict под ключом query хранится ключевая фраза,
    # а под ключом text - текст, сгенерированный Балабобой.
    # Составьте и напечатайте строку, состоящую из
    # ключевой фразы и сгенерированного текста:
    # "ключевая_фраза сгенерированный_текст"
    print (f'{text_dict["query"]} {text_dict["text"]}')


# Вызов функций: получаем и печатаем жанры
# Получаем список доступных жанров, используя функцию get_genres() 
# и записываем его в genres_list
genres_list = get_genres()
# Выводим жанры в читабельном виде, используя функцию print_genres()
print_genres(genres_list)

# Вызов функций: получаем и печатаем сгенерированный текст
# Передаем параметры для запроса к Балабобе и сохраняем ответ в переменной text_dict
text_dict = generate_text(query, genre)
# Преобразуем и выводим ответ при помощи функции print_text()
print_text(text_dict)